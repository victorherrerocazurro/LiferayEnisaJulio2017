package com.example.plugins.service.base;

import com.example.plugins.model.Puja;
import com.example.plugins.service.PujaService;
import com.example.plugins.service.persistence.ProductoPersistence;
import com.example.plugins.service.persistence.PujaPersistence;
import com.example.plugins.service.persistence.SubastaPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.asset.service.persistence.AssetEntryPersistence;
import com.liferay.portlet.asset.service.persistence.AssetTagPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the puja remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.example.plugins.service.impl.PujaServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.example.plugins.service.impl.PujaServiceImpl
 * @see com.example.plugins.service.PujaServiceUtil
 * @generated
 */
public abstract class PujaServiceBaseImpl extends BaseServiceImpl
    implements PujaService, IdentifiableBean {
    @BeanReference(type = com.example.plugins.service.ProductoLocalService.class)
    protected com.example.plugins.service.ProductoLocalService productoLocalService;
    @BeanReference(type = com.example.plugins.service.ProductoService.class)
    protected com.example.plugins.service.ProductoService productoService;
    @BeanReference(type = ProductoPersistence.class)
    protected ProductoPersistence productoPersistence;
    @BeanReference(type = com.example.plugins.service.PujaLocalService.class)
    protected com.example.plugins.service.PujaLocalService pujaLocalService;
    @BeanReference(type = com.example.plugins.service.PujaService.class)
    protected com.example.plugins.service.PujaService pujaService;
    @BeanReference(type = PujaPersistence.class)
    protected PujaPersistence pujaPersistence;
    @BeanReference(type = com.example.plugins.service.SubastaLocalService.class)
    protected com.example.plugins.service.SubastaLocalService subastaLocalService;
    @BeanReference(type = com.example.plugins.service.SubastaService.class)
    protected com.example.plugins.service.SubastaService subastaService;
    @BeanReference(type = SubastaPersistence.class)
    protected SubastaPersistence subastaPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryLocalService.class)
    protected com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetEntryService.class)
    protected com.liferay.portlet.asset.service.AssetEntryService assetEntryService;
    @BeanReference(type = AssetEntryPersistence.class)
    protected AssetEntryPersistence assetEntryPersistence;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetTagLocalService.class)
    protected com.liferay.portlet.asset.service.AssetTagLocalService assetTagLocalService;
    @BeanReference(type = com.liferay.portlet.asset.service.AssetTagService.class)
    protected com.liferay.portlet.asset.service.AssetTagService assetTagService;
    @BeanReference(type = AssetTagPersistence.class)
    protected AssetTagPersistence assetTagPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private PujaServiceClpInvoker _clpInvoker = new PujaServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.example.plugins.service.PujaServiceUtil} to access the puja remote service.
     */

    /**
     * Returns the producto local service.
     *
     * @return the producto local service
     */
    public com.example.plugins.service.ProductoLocalService getProductoLocalService() {
        return productoLocalService;
    }

    /**
     * Sets the producto local service.
     *
     * @param productoLocalService the producto local service
     */
    public void setProductoLocalService(
        com.example.plugins.service.ProductoLocalService productoLocalService) {
        this.productoLocalService = productoLocalService;
    }

    /**
     * Returns the producto remote service.
     *
     * @return the producto remote service
     */
    public com.example.plugins.service.ProductoService getProductoService() {
        return productoService;
    }

    /**
     * Sets the producto remote service.
     *
     * @param productoService the producto remote service
     */
    public void setProductoService(
        com.example.plugins.service.ProductoService productoService) {
        this.productoService = productoService;
    }

    /**
     * Returns the producto persistence.
     *
     * @return the producto persistence
     */
    public ProductoPersistence getProductoPersistence() {
        return productoPersistence;
    }

    /**
     * Sets the producto persistence.
     *
     * @param productoPersistence the producto persistence
     */
    public void setProductoPersistence(ProductoPersistence productoPersistence) {
        this.productoPersistence = productoPersistence;
    }

    /**
     * Returns the puja local service.
     *
     * @return the puja local service
     */
    public com.example.plugins.service.PujaLocalService getPujaLocalService() {
        return pujaLocalService;
    }

    /**
     * Sets the puja local service.
     *
     * @param pujaLocalService the puja local service
     */
    public void setPujaLocalService(
        com.example.plugins.service.PujaLocalService pujaLocalService) {
        this.pujaLocalService = pujaLocalService;
    }

    /**
     * Returns the puja remote service.
     *
     * @return the puja remote service
     */
    public com.example.plugins.service.PujaService getPujaService() {
        return pujaService;
    }

    /**
     * Sets the puja remote service.
     *
     * @param pujaService the puja remote service
     */
    public void setPujaService(
        com.example.plugins.service.PujaService pujaService) {
        this.pujaService = pujaService;
    }

    /**
     * Returns the puja persistence.
     *
     * @return the puja persistence
     */
    public PujaPersistence getPujaPersistence() {
        return pujaPersistence;
    }

    /**
     * Sets the puja persistence.
     *
     * @param pujaPersistence the puja persistence
     */
    public void setPujaPersistence(PujaPersistence pujaPersistence) {
        this.pujaPersistence = pujaPersistence;
    }

    /**
     * Returns the subasta local service.
     *
     * @return the subasta local service
     */
    public com.example.plugins.service.SubastaLocalService getSubastaLocalService() {
        return subastaLocalService;
    }

    /**
     * Sets the subasta local service.
     *
     * @param subastaLocalService the subasta local service
     */
    public void setSubastaLocalService(
        com.example.plugins.service.SubastaLocalService subastaLocalService) {
        this.subastaLocalService = subastaLocalService;
    }

    /**
     * Returns the subasta remote service.
     *
     * @return the subasta remote service
     */
    public com.example.plugins.service.SubastaService getSubastaService() {
        return subastaService;
    }

    /**
     * Sets the subasta remote service.
     *
     * @param subastaService the subasta remote service
     */
    public void setSubastaService(
        com.example.plugins.service.SubastaService subastaService) {
        this.subastaService = subastaService;
    }

    /**
     * Returns the subasta persistence.
     *
     * @return the subasta persistence
     */
    public SubastaPersistence getSubastaPersistence() {
        return subastaPersistence;
    }

    /**
     * Sets the subasta persistence.
     *
     * @param subastaPersistence the subasta persistence
     */
    public void setSubastaPersistence(SubastaPersistence subastaPersistence) {
        this.subastaPersistence = subastaPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    /**
     * Returns the asset entry local service.
     *
     * @return the asset entry local service
     */
    public com.liferay.portlet.asset.service.AssetEntryLocalService getAssetEntryLocalService() {
        return assetEntryLocalService;
    }

    /**
     * Sets the asset entry local service.
     *
     * @param assetEntryLocalService the asset entry local service
     */
    public void setAssetEntryLocalService(
        com.liferay.portlet.asset.service.AssetEntryLocalService assetEntryLocalService) {
        this.assetEntryLocalService = assetEntryLocalService;
    }

    /**
     * Returns the asset entry remote service.
     *
     * @return the asset entry remote service
     */
    public com.liferay.portlet.asset.service.AssetEntryService getAssetEntryService() {
        return assetEntryService;
    }

    /**
     * Sets the asset entry remote service.
     *
     * @param assetEntryService the asset entry remote service
     */
    public void setAssetEntryService(
        com.liferay.portlet.asset.service.AssetEntryService assetEntryService) {
        this.assetEntryService = assetEntryService;
    }

    /**
     * Returns the asset entry persistence.
     *
     * @return the asset entry persistence
     */
    public AssetEntryPersistence getAssetEntryPersistence() {
        return assetEntryPersistence;
    }

    /**
     * Sets the asset entry persistence.
     *
     * @param assetEntryPersistence the asset entry persistence
     */
    public void setAssetEntryPersistence(
        AssetEntryPersistence assetEntryPersistence) {
        this.assetEntryPersistence = assetEntryPersistence;
    }

    /**
     * Returns the asset tag local service.
     *
     * @return the asset tag local service
     */
    public com.liferay.portlet.asset.service.AssetTagLocalService getAssetTagLocalService() {
        return assetTagLocalService;
    }

    /**
     * Sets the asset tag local service.
     *
     * @param assetTagLocalService the asset tag local service
     */
    public void setAssetTagLocalService(
        com.liferay.portlet.asset.service.AssetTagLocalService assetTagLocalService) {
        this.assetTagLocalService = assetTagLocalService;
    }

    /**
     * Returns the asset tag remote service.
     *
     * @return the asset tag remote service
     */
    public com.liferay.portlet.asset.service.AssetTagService getAssetTagService() {
        return assetTagService;
    }

    /**
     * Sets the asset tag remote service.
     *
     * @param assetTagService the asset tag remote service
     */
    public void setAssetTagService(
        com.liferay.portlet.asset.service.AssetTagService assetTagService) {
        this.assetTagService = assetTagService;
    }

    /**
     * Returns the asset tag persistence.
     *
     * @return the asset tag persistence
     */
    public AssetTagPersistence getAssetTagPersistence() {
        return assetTagPersistence;
    }

    /**
     * Sets the asset tag persistence.
     *
     * @param assetTagPersistence the asset tag persistence
     */
    public void setAssetTagPersistence(AssetTagPersistence assetTagPersistence) {
        this.assetTagPersistence = assetTagPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return Puja.class;
    }

    protected String getModelClassName() {
        return Puja.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = pujaPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
